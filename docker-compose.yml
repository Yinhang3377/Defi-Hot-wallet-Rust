version: '3.8'

services:
  # DeFi Hot Wallet Service
  defi-wallet:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: defi-hot-wallet
    restart: unless-stopped
    ports:
      - "8080:8080"       # API server
      - "9090:9090"       # Metrics endpoint
    volumes:
      - wallet_data:/app/data
      - wallet_keys:/app/keys
      - wallet_logs:/app/logs
      - ./config.toml:/app/config.toml:ro
    environment:
      - RUST_LOG=info
      - WALLET_DATABASE_URL=sqlite:/app/data/wallet.db
      - WALLET_HOST=0.0.0.0
      - WALLET_PORT=8080
      - WALLET_METRICS_PORT=9090
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - defi-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: defi-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - defi-network
    depends_on:
      - defi-wallet

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: defi-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - defi-network
    depends_on:
      - prometheus

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: defi-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - defi-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: defi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - defi-network
    depends_on:
      - defi-wallet

networks:
  defi-network:
    driver: bridge

volumes:
  wallet_data:
    driver: local
  wallet_keys:
    driver: local
  wallet_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local